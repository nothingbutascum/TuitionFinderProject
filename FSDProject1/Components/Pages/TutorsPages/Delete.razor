@page "/tutors/delete"
@using Microsoft.EntityFrameworkCore
@using FSDProject1.Domain
@inject IDbContextFactory<FSDProject1.Data.FSDProject1Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Tutors</h2>
    <hr />
    @if (tutors is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@tutors.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Qualification</dt>
            <dd class="col-sm-10">@tutors.Qualification</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Experience</dt>
            <dd class="col-sm-10">@tutors.Experience</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">HourlyRate</dt>
            <dd class="col-sm-10">@tutors.HourlyRate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Rating</dt>
            <dd class="col-sm-10">@tutors.Rating</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@tutors.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@tutors.DateUpdated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@tutors.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@tutors.UpdatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">StudentUserId</dt>
            <dd class="col-sm-10">@tutors.StudentUserId</dd>
        </dl>
        <EditForm method="post" Model="tutors" OnValidSubmit="DeleteTutors" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(tutors is null)">Delete</button> |
            <a href="/tutors">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Tutors? tutors;

    [SupplyParameterFromQuery]
    private int TutorId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        tutors = await context.Tutors.FirstOrDefaultAsync(m => m.TutorId == TutorId);

        if (tutors is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteTutors()
    {
        using var context = DbFactory.CreateDbContext();
        context.Tutors.Remove(tutors!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/tutors");
    }
}
